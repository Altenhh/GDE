using System;
using System.Collections.Generic;
using GDAPI.Objects.GeometryDash.General;
using GDEdit.App.Graphics;
using GDEdit.App.Overlays;
using osu.Framework.Graphics;
using osu.Framework.Graphics.Shapes;
using osu.Framework.Testing;
using osuTK.Graphics;

namespace GDEdit.Tests.Visual.TestSceneMenu
{
    public class TestSceneLevelOverlay : TestScene
    {
        public override IReadOnlyList<Type> RequiredTypes => new[]
        {
            typeof(LevelOverlay)
        };

        private LevelOverlay overlay = new LevelOverlay(new Level("Dummy level", "This is a dummy description",
                                                            "kS38,1_40_2_125_3_255_11_255_12_255_13_255_4_-1_6_1000_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1001_7_1_15_1_18_0_8_1|1_0_2_102_3_255_11_255_12_255_13_255_4_-1_6_1009_7_1_15_1_18_0_8_1|1_255_2_255_3_255_11_255_12_255_13_255_4_-1_6_1002_5_1_7_1_15_1_18_0_8_1|1_125_2_255_3_0_11_255_12_255_13_255_4_-1_6_1005_5_1_7_1_15_1_18_0_8_1|1_255_2_0_3_125_11_255_12_255_13_255_4_-1_6_1006_5_1_7_1_15_1_18_0_8_1|,kA13,0,kA15,0,kA16,0,kA14,,kA6,0,kA7,0,kA17,0,kA18,0,kS39,0,kA2,0,kA3,0,kA8,0,kA4,0,kA9,0,kA10,0,kA11,0;1,1,2,225,3,15;1,1,2,255,3,15,21,1004;1,1,2,285,3,15,21,1004;1,1,2,315,3,15,21,1004;1,1,2,345,3,15,21,1004;1,1,2,375,3,15,21,1004;1,1,2,405,3,15,21,1004;1,1,2,435,3,15,21,1004;1,1,2,465,3,15,21,1004;1,1,2,1125,3,15,21,1004;1,1,2,1155,3,15,21,1004;1,1,2,1185,3,15,21,1004;1,1,2,1215,3,15,21,1004;1,1,2,1365,3,15,21,1004;1,1,2,1755,3,15,21,1004;1,1,2,1755,3,45,21,1004;1,1,2,1755,3,75,21,1004;1,1,2,1755,3,105,21,1004;1,1,2,1785,3,45,21,1004;1,1,2,1785,3,15,21,1004;1,1,2,1785,3,75,21,1004;1,1,2,1815,3,45,21,1004;1,1,2,1815,3,15,21,1004;1,1,2,1845,3,15,21,1004;1,1,2,2505,3,15,21,1004;1,1,2,2535,3,15,21,1004;1,1,2,2565,3,15,21,1004;1,1,2,2595,3,15,21,1004;1,1,2,2625,3,15,21,1004;1,1,2,2655,3,15,21,1004;1,1,2,2685,3,15,21,1004;1,1,2,2715,3,15,21,1004;1,1,2,2745,3,15,21,1004;1,1,2,2775,3,15,21,1004;1,1,2,2775,3,45,21,1004;1,1,2,2805,3,45,21,1004;1,1,2,2835,3,45,21,1004;1,1,2,2865,3,45,21,1004;1,1,2,2895,3,45,21,1004;1,1,2,2925,3,45,21,1004;1,1,2,2955,3,45,21,1004;1,1,2,2985,3,45,21,1004;1,1,2,3015,3,75,21,1004;1,1,2,3045,3,75,21,1004;1,1,2,3075,3,75,21,1004;1,1,2,3105,3,75,21,1004;1,1,2,3135,3,75,21,1004;1,1,2,3165,3,75,21,1004;1,1,2,3165,3,105,21,1004;1,1,2,3195,3,105,21,1004;1,1,2,3225,3,105,21,1004;1,1,2,3255,3,105,21,1004;1,1,2,3285,3,105,21,1004;1,1,2,3315,3,105,21,1004;1,1,2,3315,3,135,21,1004;1,1,2,3345,3,135,21,1004;1,1,2,3795,3,15,21,1004;1,1,2,3795,3,45,21,1004;1,1,2,3795,3,75,21,1004;1,1,2,3795,3,105,21,1004;1,1,2,3795,3,135,21,1004;1,1,2,3795,3,165,21,1004;1,1,2,3795,3,195,21,1004;1,1,2,3795,3,225,21,1004;",
                                                            "Alten"));

        [SetUpSteps]
        public void Setup()
        {
            Add(new Box
            {
                Colour = GDEColour.Gray20,
                RelativeSizeAxes = Axes.Both
            });
            Add(overlay);
            
            AddStep("Toggle visibility", () => overlay.ToggleVisibility());
        }
    }
}